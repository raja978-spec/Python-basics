1. Write a Python function to find the maximum of three numbers.

def Max(a:list):
    max=0
    for i in a:
        if i>max:
            max=i
    return max
print(Max([14,543,232]))
------------------------------------------------------------

2. Write a Python function to sum all the numbers in a list.
Sample List : (8, 2, 3, 0, 7)
Expected Output : 20

def Sum(a:list):
    sum=0
    for i in a:
        sum+=i
    return sum
print(Sum((8, 2, 3, 0, 7)))
--------------------------------------------------------------------------------------


3. Write a Python function to multiply all the numbers in a list.
Sample List : (8, 2, 3, -1, 7)
Expected Output : -336

def Mul(list):
    mul =1
    for i in list:
        mul *= i
    return mul
print(Mul((8, 2, 3, -1, 7)))


---------------------------------------------------------------

4. Write a Python program to reverse a string.

def reverse_string(a):
    str=''
    for i in a:
        str = i+str
    return  str

print(reverse_string("1234abcd"))
---------------------------------------------------------------------

5. Write a Python function to calculate the factorial of a number (a non-negative integer). The function accepts the number as an argument.

def factorial(num):
    f=1
    for i in range(1,num+1):
        f*=i
    return f
print(factorial(3))

-----------------------------------------------------------------------------------
6. Write a Python function to check whether a number falls within a given range.

def is_in_range_of_100_to_200(num):
    if(num >=100 and num <= 200):
        return f'{num} is in the range of 100 to 200'
    else:
        return f'{num} is not in the range of 100 to 200'
print(is_in_range_of_100_to_200(134))

----------------------------------------------------------------------

7. Write a Python function that accepts a string and counts the number of upper and lower case letters.
Sample String : 'The quick Brow Fox'
Expected Output :
No. of Upper case characters : 3
No. of Lower case Characters : 12

def count_no_of_lower_and_upper(str):
    lower=0
    upper=0
    for i in str:
        if i>='a' and i<='z':
            lower+=1
        elif i>='A' and i<='Z':
            upper+=1
    return f'''
    No. of Upper case characters : {upper}
    No. of Lower case Characters : {lower}
    '''
print(count_no_of_lower_and_upper('The quick Brow Fox'))

----------------------------------------------------------------------------------------------
8. Write a Python function that takes a list and returns a new list with distinct elements from the first list.
Sample List : [1,2,3,3,3,3,4,5]
Unique List : [1, 2, 3, 4, 5]

def find_unique(list):
    new_array = []
    for i in list:
       if i not in new_array:
           new_array.append(i)

    return  new_array

print(find_unique([1,2,3,3,3,3,4,5]))

-----------------------------------------------------------------------------------------------------------------------

9. Write a Python function that takes a number as a parameter and checks whether the number is prime or not.
Note : A prime number (or a prime) is a natural number greater than 1 and that has no positive divisors other than 1 and itself.

A prime number is defined as a number greater than
1 that has no divisors other than 1 and itself. 
To check if a number is prime, you can iterate from 2 
up to the square root of the number, testing for any divisors. 
This method is efficient because if a number has a divisor 
larger than its square root, the corresponding quotient must 
be smaller than the square root. 

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):  # Check only up to âˆšn
        if n % i == 0:
            return False
    return True

num = int(input('num: '))
if is_prime(num):
    print(num,'is a prime number')
else:
    print(num,'is not a prime number')


# A prime number should has only one factor and
# it is divisble by it self
# Ex: 5 is factor 1 and it is divisble by itself
# Ex: 6 has factors 1,2,3 so it is not prime

APPROACH 2:

no=int(input('no: '))
count = 0
    
for i in range(1, no+1):
    if no%i == 0:
       count += 1
if count == 2:
  print(no,' is a prime number')
else:
  print(no,'is not prime number')



----------------------------------------------------------------------------------------------------------------------------------

10. Write a Python program to print the even numbers from a given list.
Sample List : [1, 2, 3, 4, 5, 6, 7, 8, 9]
Expected Result : [2, 4, 6, 8]

def even(list):
    even_no_list=[]
    for num in list:
        if num%2 == 0:
            even_no_list.append(num)
    return even_no_list
print(even([1, 2, 3, 4, 5, 6, 7, 8, 9]))
