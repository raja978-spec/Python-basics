1)Find the size of a Set in Python

a={545,335,5366,86745,2425}
print('size of set in byte is', a.__sizeof__())

------------------------------------------------------------------------------------------

2)Iterate over a set in Python
3)Python – Maximum and Minimum in a Set

max=None
min=None

print("Iterating over set to find min and max")
for i in a:
    if min is None or max is None:
        min = i
        max = i
    elif min is not None and i < min:
        min = i
    elif min is not None and i > max:
        max = i

print('min and max number from set',a,'is',min,max)

--------------------------------------------------------------------------------------------------

4)Python – Remove items from Set

a={545,335,5366,86745,2425}
a.discard(335)
a.discard(86745)
a.discard(5366)
print(a)

---------------------------------------------------------------------------------------------
5)Python – Check if two lists have at-least one element common

a=[545,335,5366,86745,2425]
b=[545,335,5366,86745,2425,5523,2351,6353]

small_list=[]
bigger_list=[]

if len(a)>len(b):
    bigger_list = a
elif len(b)>len(a):
    bigger_list = b

if len(a)<len(b):
    small_list = a
elif len(b)<len(a):
    small_list = b


for ele in bigger_list:
    if ele in small_list:
        print('common element in list is', ele)

---------------------------------------------------------------------------------------

6)Python program to find common elements in three lists using sets

a=[545,335,5366,86745,2425]
b=[545,335,43,42,1]
c=[545,335,5366,86745,2425,5523,2351,6353]

s1=set(a)
s2=set(b)
s3=set(c)

s1.intersection_update(s2,s3)

print('common element', s1)

-----------------------------------------------------------------------------------------------------

7)Python – Find missing and additional values in two lists
8)Python program to find the difference between two lists

a=[545,335,5366,86745,2425]
b=[545,335,43,42,1]

a=set(a)
b=set(b)

c= a.difference(b) #missing values
d= b.difference(a) #additional values

print(c,d)
------------------------------------------------------------------------------------

9)Python Set difference to find lost element from a duplicated array

a=[545,335,5366,86745,2425,2425,43]
b=[545,335,5366,86745,2425,2425,23,12]

a=set(a)
b=set(b)

c = a.difference(b)
print(c)

--------------------------------------------------------------------------------
10)Python program to count number of vowels using sets in given string

str="animal"
vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
count=0
for char in str:
    if char in vowels:
        count+=1
print(count)
--------------------------------------------------------------------------------------
11)Concatenated string with uncommon characters in Python

str1="animal"
str2='butterfly'

s1=set(str1)
s2=set(str2)

un_common_chars = s1.symmetric_difference(s2)
print(''.join(un_common_chars))

----------------------------------------------------------------------------------------

12)Python – Program to accept the strings which contains all vowels

str1="abstemiuos"
vowels='aeiou'

s1=set(str1)
s2=set(vowels)

if s2.issubset(str1):
   print(str1, 'string accepted')
else:
    print(str1, 'string not accepted')

--------------------------------------------------------------------------------------------------
13)Python – Check if a given string is binary string or not

str1="10101000001010"
binary={'1','0'}
if(binary.issubset(str1)):
    print(set(str1).difference(binary))
    is_str_contains_only_binary = len(set(str1).difference(binary)) == 0
    if(is_str_contains_only_binary):
        print(str1, 'is binary string')
    else:
        print(str1, 'is not a binary string')
else:
    print(str1,'is not a binary string')

--------------------------------------------------------------------------------------------

14)Python set to check if string is anagram

str1="listen"
str2='silent'

s1=set(str1)
s2=set(str2)
c=s1.symmetric_difference(s2)
print(c)

if(len(c)==0):
    print(str1,'and', str2,'is a anagram')
else:
    print(str1, 'and', str2, 'is not a anagram')


15)Python Set – Pairs of complete strings in two sets

str1={'hello','orlwd'}
str2={'eolh', 'wohedolr'}

for i in str1:
    for j in str2:
        if(set(i).issubset(j)):
            print('pair of string', i,j)